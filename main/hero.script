function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#collider", "disable")

	self.anim = nil

	self.entering = false
	
	self.input = vmath.vector3()
	self.pp = vmath.vector3()
	self.velocity = vmath.vector3()
	self.correction = vmath.vector3()
end

local function anim(self)
	local a = self.anim
	if vmath.length_sqr(self.velocity) > 0.01 then
		a = hash("hero-walk")
	else
		a = hash("hero-idle")
	end
	print(self.velocity)

	if a ~= self.anim then
		self.anim = a
		msg.post("#sprite", "play_animation", { id = self.anim })
	end
end

function update(self, dt)
	if vmath.length_sqr(self.input) > 1 then
		self.input = vmath.normalize(self.input)
	end

	anim(self)

	local p = go.get_position()
	local newp = p + self.input * 100 * dt
	go.set_position(newp)

	-- edges
	if newp.y > 768 then
		msg.post("/game#script", "load_screen", { dir = hash("up") })
	elseif newp.y < 0 then
		msg.post("/game#script", "load_screen", { dir = hash("down") })
	elseif newp.x > 1280 then
		msg.post("/game#script", "load_screen", { dir = hash("right") })
	elseif newp.x < 0 then
		msg.post("/game#script", "load_screen", { dir = hash("left") })
	end

	self.velocity = p - self.pp		
	self.pp = p		
	self.input = vmath.vector3()
	self.correction = vmath.vector3()
end

local enters = { [hash("center")] = vmath.vector3(0, 0, 0),
				 [hash("up")] = vmath.vector3(0, 32, 0),
				 [hash("down")] = vmath.vector3(0, -32, 0),
				 [hash("right")] = vmath.vector3(32, 0, 0),
				 [hash("left")] = vmath.vector3(-32, 0, 0) }

local function activate(self)
	msg.post("#collider", "enable")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("enter_screen") then
		local p = go.get_position()
		local dp = enters[message.dir]
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, p+dp, go.EASING_LINEAR, 0.5, 0, activate)
	elseif message_id == hash("contact_point_response") then
		local proj = vmath.dot(self.correction, message.normal)
		local comp = (message.distance - proj) * message.normal
		self.correction = self.correction + comp
		go.set_position(go.get_position() + comp)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("north") then
		self.input.y = 1
	elseif action_id == hash("south") then
		self.input.y = -1
	elseif action_id == hash("east") then
		self.input.x = 1
	elseif action_id == hash("west") then
		self.input.x = -1
	end
end
